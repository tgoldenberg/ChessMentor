<div class="col-md-9">
  <div class="chess-holder" data-player1="<%= @game.player1_id %>" data-player2="<%= @game.player2_id %>">
    <!-- divs for video screens of self and other -->
    <div class="video-box-parent video-box">
      <div class="video-box-child" id="otherVideos"></div>
        <div class="button-container">
          <div class="video-buttons" style="float:left;">
            <span class="glyphicon glyphicon-facetime-video video-chat-buttons button-glyphs"><a id="camera" style="text-decoration: none; color: white;" href="#">CAMERA</a></span>
          </div>
          <div class="video-buttons" style="float:right;">
            <span class="glyphicon glyphicon-volume-up video-chat-buttons button-glyphs"><a id="mic" style="text-decoration: none; color: white;" href="#">MIC</a></span>
          </div>
        </div>
      </div>
    </div>
    <!-- divs for chess timers 1 & 2  -->
    <div class="col-sm-2 timer-holder clock" style="font-size: 20px;">
      <div class="video-box-self" id="myVideo" style="width: 190px; background: black; height: 138px; display: none; position: absolute; bottom: 0; left: 0; margin-left: -210px;"></div>
      <div class="button-holder first-button-holder">
        <span class="glyphicon glyphicon-hourglass button-glyphs"></span>  <p>Player <b>1</b></p><span class="glyphicon glyphicon-minus button-glyphs"></span>
      </div>
      <div class="time-box first-time-box">
        <div id="time0" class="time-digits"></div>
      </div>
      <!-- divs for player 1 info -->
      <div class="space-keeper first-space-keeper ">
        <p class="line-break"></p>
        <div class="player-info">
          <div class="user-header">
             <p><span class="glyphicon glyphicon-user button-glyphs"></span>ryanG360</p><br><br>
          </div>
          <p>Brooklyn, NY</p><br>
          <p>Ranking: 2400</p><br>
          <p>User Rank:
            <span class="glyphicon glyphicon-star"></span>
            <span class="glyphicon glyphicon-star"></span>
            <span class="glyphicon glyphicon-star"></span>
          </p>
        </div>
      </div>
      <div class="button-holder second-button-holder">
        <span class="glyphicon glyphicon-hourglass button-glyphs"></span><p>Player <b>2</b></p><span class="glyphicon glyphicon-minus button-glyphs"></span>
      </div>
      <div class="time-box">
        <div id="time1" class="time-digits"></div>
      </div>
      <!-- divs for player 2 info -->
      <div class="space-keeper second-space-keeper">
        <p class="line-break"></p>
        <div class="player-info">
          <div class="user-header">
             <p><span class="glyphicon glyphicon-user button-glyphs"></span>tGold108</p><br><br>
          </div>
          <p>Long Beach, NY</p><br>
          <p>Ranking: 1200</p><br>
          <p>User Rank
            <span class="glyphicon glyphicon-star"></span>
            <span class="glyphicon glyphicon-star"></span>
            <span class="glyphicon glyphicon-star"></span>
            <span class="glyphicon glyphicon-star"></span>
          </p>
        </div>
      </div>
    </div>
    <!-- chess board  -->
    <div class="col-sm-8" id="board" style="width: 537px"></div>

    <!-- <p>Status: <span id="status"></span></p>
    <p>FEN: <span id="fen"></span></p>
    <p>PGN: <span id="pgn"></span></p> -->

    <!-- captured pieces section -->
    <div class="col-sm-2 captured-pieces animated">
      <div class="white-pieces">
        <div class="button-holder">
          <span class="glyphicon glyphicon-ok-circle button-glyphs"></span><p>Captured Black</p>
        </div>
      </div>
      <div class="space-bottom"></div>
      <div class="black-pieces">
        <div class="button-holder">
        <span class="glyphicon glyphicon-ok-circle button-glyphs"></span><p>Captured White</p>
        </div>
      </div>
      <div class="space-bottom"></div>
    </div>
  </div>
</div>

<!-- sidebar for move notation -->
<div class="sidebar-nav col-md-3">
  <div class="table-holder container-sm">
  <table class="table text-holder">
    <tbody class="text-list">
      <% @moves.each_with_index do |move, idx| %>
      <!-- eliminate duplicate notations -->
      <% if move.notation.split('-')[0] == 'undefined' %>
      <% @moves[idx].delete %>
      <% end %>
      <% end %>
      <% @moves.each_with_index do |move, idx| %>
      <% if idx % 2 == 0 && idx > 1 && move.notation.split('-')[0] != 'undefined' %>
      <tr id="<% @game.moves.index(move)/2 + 1 %>"><th><b> <%= @game.moves.index(move)/2 %></b> <div class="pipe">|</div> <%= move.notation %></th><th> <%= link_to 'Rearrange Board', new_board_path(:move_id => move.id, :fen => move.piece), remote: true, class: 'btn btn-success btn-sm'  %></th></tr>
      <% end %>
      <% end %>
    </tbody>
  </table>
  </div>
  <!-- buttons to offer draw or quit -->
  <div class="buttons">
    <button class="btn"><span class="glyphicon glyphicon-hand-right button-glyphs"></span><li> <%= link_to 'DRAW', "#", style: 'text-decoration: none; color: white;' %></li></button>
    <td></td>
    <button class="btn"><span class="glyphicon glyphicon-flag button-glyphs"></span><li> <%= link_to 'QUIT', "#", style: 'text-decoration: none; color: white;' %></li></button>
  </div>
</div>

<!-- divs for chatbox -->
<div class="bottom-row"></div>
<!-- <div class="popup-chatbox">
  <div class="closed-box">
    <p class="closed-header">OPEN CHAT</p>
    <span class="glyphicon glyphicon-plus button-glyphs"></span>
  </div>
  <div class="open-box" style="display:none;">
    <div class="popup-head">
      <div class="popup-head-left"><p>OPPONENT</p></div>
      <div class="popup-head-right"><span class="glyphicon glyphicon-minus button-glyphs"></span></div>
    </div>
    <div class="popup-messages">
      <div class="message-content">
        <% @messages.each do |msg| %>
          <% if msg.sender_id == current_user.id %>
            <div class="message-wrapper">
              <div class="right">
                <p class="message-text"> <%= msg.body %></p><img src="/assets/profile.png">
              </div>
            </div>
          <% else %>
          <h6> <%= time_ago_in_words(msg.created_at) %> </h6>
            <div class="message-wrapper">
              <div class="left">
                <img src="/assets/profile.png"><p class="message-text"> <%= msg.body %></p>
              </div>
            </div>
          <% end %>
        <% end %>
      </div> -->
      <!-- <%= simple_form_for [@conversation, @message], remote: true, html: { autocomplete: 'off'} do |f| %>
          <%= f.hidden_field :sender_id, :id => 'message-sender' %>
          <%= f.hidden_field :recipient_id, :id => 'message-recipient'  %>
          <%= f.hidden_field :conversation_id %>
          <input type="text" <%= f.input_field :body, autofocus: true, :class => 'text-field' %>
          <%= f.button :submit, :label => 'send', :class => 'btn btn-primary send', :style => 'display: none;' %>
      <% end %> -->
    <!-- </div>
  </div> -->
</div>

<!-- divs for end of game animation -->
<div class="game-over animated bounceIn" style="display: none;">
  <h1>Game Over: White Wins!</h1>
  <p>Get ready for your aftergame debrief</p>
</div>

<!-- hidden form for moves -->
<%= form_for [@game, @move], remote: true do |f| %>
    <%= f.hidden_field :notation, id: 'move-notation' %>
    <%= f.hidden_field :room_id  %>
    <%= f.hidden_field :user_id, id: 'move-user' %>
    <%= f.hidden_field :piece, id: 'move-piece'  %>
    <%= f.submit "", :id => 'move-submit', :style => 'display: none;' %>
<% end %>


<script src="https://cdn.cine.io/cineio-peer.js"></script>
<!-- <script src="/assets/initialize_video.js"></script>
<script src="/assets/fill_message_field.js"></script>
<script src="/assets/chess.js"></script>
<script src="/assets/new_board.js"></script>
<script src="/assets/captured_pieces.js"></script>
<script src="/assets/date_helper.js"></script>
<script src="/assets/timer.js"></script> -->

<script>
// $(function() {
//   // variables from embedded ruby data attributes
//   var player1 = $('.chess-holder').data('player1');
//   var player2 = $('.chess-holder').data('player2');
//   var currentUser = $('body').data('user');
//   // switch orientation depending on player id
//   if (currentUser === player2) {
//     board.orientation('black');
//   }
//   // provides functionality to expand - close chatbox
//   $('.glyphicon-minus').click(function() {
//     $(this).parent().parent().parent().toggle();
//     $(this).parent().parent().parent().parent().find('.closed-box').toggle();
//     $(this).parent().parent().parent().parent().addClass('popup-chatbox');
//     $(this).parent().parent().parent().parent().removeClass('popup-expanded');
//   });
//   $('.glyphicon-plus').click(function() {
//     $(this).parent().toggle();
//     $(this).parent().parent().find('.open-box').toggle();
//     $('.popup-chatbox').removeClass('pulsit');
//     $(this).parent().parent().addClass('popup-expanded');
//     $(this).parent().parent().removeClass('popup-chatbox');
//     $('.open-box').find('.message-content').scrollTop($('.open-box').find('.message-content').prop("scrollHeight"));
//   });
//   // assign Pusher key and channel name
//   var pusher = new Pusher('f74ddd7f3eae987007b6');
//   var channelName = 'private-conversation.' + "<%= current_user ? current_user.id.to_s : 'null' %>";
//   var channel = pusher.subscribe(channelName);
  // Pusher event for new chatbox message
  // channel.bind('new_message', function(data) {
  // var timeAgo = DateHelper.time_ago_in_words_with_parsing(data.time);
  // $('.message-content').append('<h6>' + timeAgo + ' </h6><div class="message-wrapper"><div class="left"><img src="/assets/profile.png"><p class="message-text">' + data.message + '</p></div></div>');
  // $('.open-box').find('.message-content').scrollTop($('.open-box').find('.message-content').prop("scrollHeight"));
  // if ($('.open-box').css('display') === 'none') {
  //   $('.popup-chatbox').addClass('pulsit');
  // }
  // });
  // Pusher event for new chess move
  // channel.bind('new_move', function(data) {
  //   onDrop(data.object_notation.split('-')[0], data.object_notation.split('-')[1]);
  //   board.move(data.object_notation);
  //   switchTurn();
  //   setCapturedPieces(data);
  // });
  // set timer
  // $('#time1').addClass('turn');
  // return intervalId = setInterval(update, 1000);
// });
</script>
